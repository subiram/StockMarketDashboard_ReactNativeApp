{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { setErrorMessage } from \"./authActions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DashboardScreen = function DashboardScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var authState = useSelector(function (state) {\n    return state.auth;\n  });\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    mostActiveStocks = _useState2[0],\n    setMostActiveStocks = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    fetchMostActiveStocks();\n  }, []);\n  var fetchMostActiveStocks = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.get(`https://cloud.iexapis.com/stable/stock/market/list/mostactive?token=pk_7e655342b747405697cf291d5ccccebc`);\n        setMostActiveStocks(response.data);\n      } catch (error) {\n        dispatch(setErrorMessage('Error fetching stock data.'));\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function fetchMostActiveStocks() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleStockPress = function handleStockPress(symbol) {\n    navigation.navigate('StockDetail', {\n      symbol: symbol\n    });\n  };\n  var renderStockCard = function renderStockCard(_ref3) {\n    var item = _ref3.item;\n    return _jsxs(TouchableOpacity, {\n      style: styles.card,\n      onPress: function onPress() {\n        return handleStockPress(item.symbol);\n      },\n      children: [_jsx(Text, {\n        style: styles.stockName,\n        children: item.companyName\n      }), _jsx(Text, {\n        style: styles.latestPrice,\n        children: `Latest Price: $${item.latestPrice}`\n      }), _jsx(Text, {\n        style: styles.changePrice,\n        children: `Change: ${item.change} (${item.changePercent}%)`\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Most Active Stocks\"\n    }), loading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#3498db\"\n    }) : _jsx(FlatList, {\n      data: mostActiveStocks,\n      keyExtractor: function keyExtractor(item) {\n        return item.symbol;\n      },\n      renderItem: renderStockCard,\n      showsVerticalScrollIndicator: false\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16\n  },\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    padding: 16,\n    marginBottom: 16,\n    elevation: 3,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 2\n  },\n  stockName: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  latestPrice: {\n    fontSize: 16,\n    marginTop: 8\n  },\n  changePrice: {\n    fontSize: 16,\n    color: 'green',\n    marginTop: 4\n  }\n});\nexport default DashboardScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","TouchableOpacity","ActivityIndicator","StyleSheet","useSelector","useDispatch","axios","setErrorMessage","jsx","_jsx","jsxs","_jsxs","DashboardScreen","_ref","navigation","dispatch","authState","state","auth","_useState","_useState2","_slicedToArray","mostActiveStocks","setMostActiveStocks","_useState3","_useState4","loading","setLoading","fetchMostActiveStocks","_ref2","_asyncToGenerator","response","get","data","error","apply","arguments","handleStockPress","symbol","navigate","renderStockCard","_ref3","item","style","styles","card","onPress","children","stockName","companyName","latestPrice","changePrice","change","changePercent","container","title","size","color","keyExtractor","renderItem","showsVerticalScrollIndicator","create","flex","padding","fontSize","fontWeight","marginBottom","backgroundColor","borderRadius","elevation","shadowOffset","width","height","shadowOpacity","shadowRadius","marginTop"],"sources":["C:/Users/localadmin/Downloads/AFSD/StockMarketDashboard/DashboardScreen.js"],"sourcesContent":["// DashboardScreen.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, FlatList, TouchableOpacity, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { setErrorMessage } from './authActions';\r\n\r\nconst DashboardScreen = ({ navigation }) => {\r\n  const dispatch = useDispatch();\r\n  const authState = useSelector((state) => state.auth);\r\n  const [mostActiveStocks, setMostActiveStocks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchMostActiveStocks();\r\n  }, []);\r\n\r\n//   const fetchMostActiveStocks = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `https://cloud.iexapis.com/stable/stock/market/list/mostactive?token=pk_7e655342b747405697cf291d5ccccebc`\r\n//       );\r\n\r\n//       setMostActiveStocks(response.data);\r\n//     } catch (error) {\r\n//       dispatch(setErrorMessage('Error fetching stock data.'));\r\n//     }\r\n//   };\r\n\r\n  const fetchMostActiveStocks = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://cloud.iexapis.com/stable/stock/market/list/mostactive?token=pk_7e655342b747405697cf291d5ccccebc`\r\n      );\r\n\r\n      setMostActiveStocks(response.data);\r\n    } catch (error) {\r\n      dispatch(setErrorMessage('Error fetching stock data.'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleStockPress = (symbol) => {\r\n    // Navigate to the detailed page for the selected stock\r\n    navigation.navigate('StockDetail', { symbol });\r\n  };\r\n\r\n  const renderStockCard = ({ item }) => (\r\n    <TouchableOpacity style={styles.card} onPress={() => handleStockPress(item.symbol)}>\r\n      <Text style={styles.stockName}>{item.companyName}</Text>\r\n      <Text style={styles.latestPrice}>{`Latest Price: $${item.latestPrice}`}</Text>\r\n      <Text style={styles.changePrice}>{`Change: ${item.change} (${item.changePercent}%)`}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Most Active Stocks</Text>\r\n      {loading ? (\r\n        <ActivityIndicator size=\"large\" color=\"#3498db\" />\r\n      ) : (\r\n        <FlatList\r\n          data={mostActiveStocks}\r\n          keyExtractor={(item) => item.symbol}\r\n          renderItem={renderStockCard}\r\n          showsVerticalScrollIndicator={false}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n  },\r\n  card: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    padding: 16,\r\n    marginBottom: 16,\r\n    elevation: 3, // for Android 3D effect\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 2,\r\n  },\r\n  stockName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  latestPrice: {\r\n    fontSize: 16,\r\n    marginTop: 8,\r\n  },\r\n  changePrice: {\r\n    fontSize: 16,\r\n    color: 'green', // or use red for negative change\r\n    marginTop: 4,\r\n  },\r\n});\r\n\r\nexport default DashboardScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}