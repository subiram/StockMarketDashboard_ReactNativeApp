{"ast":null,"code":"var Orientation = require('react-native').NativeModules.Orientation;\nvar DeviceEventEmitter = require('react-native').DeviceEventEmitter;\nvar listeners = {};\nvar orientationDidChangeEvent = 'orientationDidChange';\nvar specificOrientationDidChangeEvent = 'specificOrientationDidChange';\nvar id = 0;\nvar META = '__listener_id';\nfunction getKey(listener) {\n  if (!listener.hasOwnProperty(META)) {\n    if (!Object.isExtensible(listener)) {\n      return 'F';\n    }\n    Object.defineProperty(listener, META, {\n      value: 'L' + ++id\n    });\n  }\n  return listener[META];\n}\n;\nmodule.exports = {\n  getOrientation: function getOrientation(cb) {\n    Orientation.getOrientation(function (error, orientation) {\n      cb(error, orientation);\n    });\n  },\n  getSpecificOrientation: function getSpecificOrientation(cb) {\n    Orientation.getSpecificOrientation(function (error, orientation) {\n      cb(error, orientation);\n    });\n  },\n  lockToPortrait: function lockToPortrait() {\n    Orientation.lockToPortrait();\n  },\n  lockToLandscape: function lockToLandscape() {\n    Orientation.lockToLandscape();\n  },\n  lockToLandscapeRight: function lockToLandscapeRight() {\n    Orientation.lockToLandscapeRight();\n  },\n  lockToLandscapeLeft: function lockToLandscapeLeft() {\n    Orientation.lockToLandscapeLeft();\n  },\n  unlockAllOrientations: function unlockAllOrientations() {\n    Orientation.unlockAllOrientations();\n  },\n  addOrientationListener: function addOrientationListener(cb) {\n    var key = getKey(cb);\n    listeners[key] = DeviceEventEmitter.addListener(orientationDidChangeEvent, function (body) {\n      cb(body.orientation);\n    });\n  },\n  removeOrientationListener: function removeOrientationListener(cb) {\n    var key = getKey(cb);\n    if (!listeners[key]) {\n      return;\n    }\n    listeners[key].remove();\n    listeners[key] = null;\n  },\n  addSpecificOrientationListener: function addSpecificOrientationListener(cb) {\n    var key = getKey(cb);\n    listeners[key] = DeviceEventEmitter.addListener(specificOrientationDidChangeEvent, function (body) {\n      cb(body.specificOrientation);\n    });\n  },\n  removeSpecificOrientationListener: function removeSpecificOrientationListener(cb) {\n    var key = getKey(cb);\n    if (!listeners[key]) {\n      return;\n    }\n    listeners[key].remove();\n    listeners[key] = null;\n  },\n  getInitialOrientation: function getInitialOrientation() {\n    return Orientation.initialOrientation;\n  }\n};","map":{"version":3,"names":["Orientation","require","NativeModules","DeviceEventEmitter","listeners","orientationDidChangeEvent","specificOrientationDidChangeEvent","id","META","getKey","listener","hasOwnProperty","Object","isExtensible","defineProperty","value","module","exports","getOrientation","cb","error","orientation","getSpecificOrientation","lockToPortrait","lockToLandscape","lockToLandscapeRight","lockToLandscapeLeft","unlockAllOrientations","addOrientationListener","key","addListener","body","removeOrientationListener","remove","addSpecificOrientationListener","specificOrientation","removeSpecificOrientationListener","getInitialOrientation","initialOrientation"],"sources":["C:/Users/localadmin/Downloads/AFSD/StockMarketDashboard/node_modules/react-native-orientation/index.js"],"sourcesContent":["var Orientation = require('react-native').NativeModules.Orientation;\nvar DeviceEventEmitter = require('react-native').DeviceEventEmitter;\n\nvar listeners = {};\nvar orientationDidChangeEvent = 'orientationDidChange';\nvar specificOrientationDidChangeEvent = 'specificOrientationDidChange';\n\nvar id = 0;\nvar META = '__listener_id';\n\nfunction getKey(listener) {\n  if (!listener.hasOwnProperty(META)) {\n    if (!Object.isExtensible(listener)) {\n      return 'F';\n    }\n\n    Object.defineProperty(listener, META, {\n      value: 'L' + ++id,\n    });\n  }\n\n  return listener[META];\n};\n\nmodule.exports = {\n  getOrientation(cb) {\n    Orientation.getOrientation((error,orientation) =>{\n      cb(error, orientation);\n    });\n  },\n\n  getSpecificOrientation(cb) {\n    Orientation.getSpecificOrientation((error,orientation) =>{\n      cb(error, orientation);\n    });\n  },\n\n  lockToPortrait() {\n    Orientation.lockToPortrait();\n  },\n\n  lockToLandscape() {\n    Orientation.lockToLandscape();\n  },\n\n  lockToLandscapeRight() {\n    Orientation.lockToLandscapeRight();\n  },\n\n  lockToLandscapeLeft() {\n    Orientation.lockToLandscapeLeft();\n  },\n\n  unlockAllOrientations() {\n    Orientation.unlockAllOrientations();\n  },\n\n  addOrientationListener(cb) {\n    var key = getKey(cb);\n    listeners[key] = DeviceEventEmitter.addListener(orientationDidChangeEvent,\n      (body) => {\n        cb(body.orientation);\n      });\n  },\n\n  removeOrientationListener(cb) {\n    var key = getKey(cb);\n\n    if (!listeners[key]) {\n      return;\n    }\n\n    listeners[key].remove();\n    listeners[key] = null;\n  },\n\n  addSpecificOrientationListener(cb) {\n    var key = getKey(cb);\n\n    listeners[key] = DeviceEventEmitter.addListener(specificOrientationDidChangeEvent,\n      (body) => {\n        cb(body.specificOrientation);\n      });\n  },\n\n  removeSpecificOrientationListener(cb) {\n    var key = getKey(cb);\n\n    if (!listeners[key]) {\n      return;\n    }\n\n    listeners[key].remove();\n    listeners[key] = null;\n  },\n\n  getInitialOrientation() {\n    return Orientation.initialOrientation;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}