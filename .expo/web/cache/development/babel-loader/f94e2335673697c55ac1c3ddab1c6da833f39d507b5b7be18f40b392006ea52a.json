{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport axios from 'axios';\nimport { LineChart } from 'react-native-chart-kit';\nimport { AreaChart, Grid } from 'react-native-svg-charts';\nimport orientation from \"../utility/orientation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar StockDetailScreen = function StockDetailScreen(_ref) {\n  var route = _ref.route;\n  var symbol = route.params.symbol;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    stockData = _useState2[0],\n    setStockData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    fetchStockData();\n  }, []);\n  var fetchStockData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.get(`https://cloud.iexapis.com/stable/stock/${symbol}/batch?types=quote,news,chart&range=1d&last=10&token=pk_7e655342b747405697cf291d5ccccebc`);\n        setStockData(response.data);\n      } catch (error) {\n        console.error('Error fetching stock data:', error);\n      }\n    });\n    return function fetchStockData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var renderChart = function renderChart() {\n    if (stockData && stockData.chart) {\n      var chartData = stockData.chart.map(function (point) {\n        return point.close;\n      });\n      var labels = stockData.chart.map(function (point) {\n        return point.label;\n      });\n      return _jsx(LineChart, {\n        data: {\n          labels: labels,\n          datasets: [{\n            data: chartData\n          }]\n        },\n        width: 300,\n        height: 200,\n        yAxisLabel: \"$\",\n        chartConfig: {\n          backgroundColor: '#ffffff',\n          backgroundGradientFrom: '#ffffff',\n          backgroundGradientTo: '#ffffff',\n          decimalPlaces: 2,\n          color: function color() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return `rgba(0, 0, 0, ${opacity})`;\n          },\n          labelColor: function labelColor() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return `rgba(0, 0, 0, ${opacity})`;\n          },\n          style: {\n            borderRadius: 16\n          },\n          propsForDots: {\n            r: '1'\n          }\n        },\n        bezier: true,\n        style: {\n          marginVertical: 8,\n          borderRadius: 16\n        }\n      });\n    }\n    return null;\n  };\n  var renderImportantRecords = function renderImportantRecords() {\n    if (stockData && stockData.quote) {\n      var _stockData$quote = stockData.quote,\n        companyName = _stockData$quote.companyName,\n        latestPrice = _stockData$quote.latestPrice,\n        change = _stockData$quote.change,\n        changePercent = _stockData$quote.changePercent;\n      return _jsxs(View, {\n        style: styles.grid,\n        children: [_jsx(Text, {\n          style: styles.gridTitle,\n          children: \"Important Records\"\n        }), _jsxs(View, {\n          style: styles.gridRow,\n          children: [_jsx(Text, {\n            style: styles.gridLabel,\n            children: \"Company Name:\"\n          }), _jsx(Text, {\n            style: styles.gridValue,\n            children: companyName\n          })]\n        }), _jsxs(View, {\n          style: styles.gridRow,\n          children: [_jsx(Text, {\n            style: styles.gridLabel,\n            children: \"Latest Price:\"\n          }), _jsxs(Text, {\n            style: styles.gridValue,\n            children: [\"$\", latestPrice]\n          })]\n        }), _jsxs(View, {\n          style: styles.gridRow,\n          children: [_jsx(Text, {\n            style: styles.gridLabel,\n            children: \"Change:\"\n          }), _jsxs(Text, {\n            style: styles.gridValue,\n            children: [change, \" (\", changePercent, \"%)\"]\n          })]\n        })]\n      });\n    }\n    return null;\n  };\n  var renderRemainingRecords = function renderRemainingRecords() {\n    if (stockData && stockData.quote) {\n      var _stockData$quote2 = stockData.quote,\n        avgTotalVolume = _stockData$quote2.avgTotalVolume,\n        currency = _stockData$quote2.currency,\n        high = _stockData$quote2.high,\n        low = _stockData$quote2.low,\n        peRatio = _stockData$quote2.peRatio,\n        week52High = _stockData$quote2.week52High,\n        week52Low = _stockData$quote2.week52Low;\n      return _jsxs(View, {\n        style: styles.grid,\n        children: [_jsx(Text, {\n          style: styles.gridTitle,\n          children: \"Other Details\"\n        }), _jsxs(View, {\n          style: styles.gridRow,\n          children: [_jsx(Text, {\n            style: styles.gridLabel,\n            children: \"Avg Total Volume:\"\n          }), _jsx(Text, {\n            style: styles.gridValue,\n            children: avgTotalVolume\n          })]\n        }), _jsxs(View, {\n          style: styles.gridRow,\n          children: [_jsx(Text, {\n            style: styles.gridLabel,\n            children: \"Currency:\"\n          }), _jsx(Text, {\n            style: styles.gridValue,\n            children: currency\n          })]\n        }), _jsxs(View, {\n          style: styles.gridRow,\n          children: [_jsx(Text, {\n            style: styles.gridLabel,\n            children: \"Day High:\"\n          }), _jsxs(Text, {\n            style: styles.gridValue,\n            children: [\"$\", high]\n          })]\n        }), _jsxs(View, {\n          style: styles.gridRow,\n          children: [_jsx(Text, {\n            style: styles.gridLabel,\n            children: \"Day Low:\"\n          }), _jsxs(Text, {\n            style: styles.gridValue,\n            children: [\"$\", low]\n          })]\n        }), _jsxs(View, {\n          style: styles.gridRow,\n          children: [_jsx(Text, {\n            style: styles.gridLabel,\n            children: \"PE Ratio:\"\n          }), _jsx(Text, {\n            style: styles.gridValue,\n            children: peRatio\n          })]\n        }), _jsxs(View, {\n          style: styles.gridRow,\n          children: [_jsx(Text, {\n            style: styles.gridLabel,\n            children: \"52 Week High:\"\n          }), _jsxs(Text, {\n            style: styles.gridValue,\n            children: [\"$\", week52High]\n          })]\n        }), _jsxs(View, {\n          style: styles.gridRow,\n          children: [_jsx(Text, {\n            style: styles.gridLabel,\n            children: \"52 Week Low:\"\n          }), _jsxs(Text, {\n            style: styles.gridValue,\n            children: [\"$\", week52Low]\n          })]\n        })]\n      });\n    }\n    return null;\n  };\n  return _jsx(ScrollView, {\n    style: styles.container,\n    children: loading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#3498db\"\n    }) : _jsxs(_Fragment, {\n      children: [renderChart(), renderImportantRecords(), renderRemainingRecords()]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  grid: {\n    marginTop: 16,\n    padding: 16,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    elevation: 3,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 2\n  },\n  gridTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 16\n  },\n  gridRow: {\n    flexDirection: 'row',\n    marginBottom: 8\n  },\n  gridLabel: {\n    flex: 1,\n    fontWeight: 'bold'\n  },\n  gridValue: {\n    flex: 2\n  }\n});\nexport default StockDetailScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","ScrollView","StyleSheet","ActivityIndicator","axios","LineChart","AreaChart","Grid","orientation","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","StockDetailScreen","_ref","route","symbol","params","_useState","_useState2","_slicedToArray","stockData","setStockData","_useState3","_useState4","loading","setLoading","fetchStockData","_ref2","_asyncToGenerator","response","get","data","error","console","apply","arguments","renderChart","chart","chartData","map","point","close","labels","label","datasets","width","height","yAxisLabel","chartConfig","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","length","undefined","labelColor","style","borderRadius","propsForDots","r","bezier","marginVertical","renderImportantRecords","quote","_stockData$quote","companyName","latestPrice","change","changePercent","styles","grid","children","gridTitle","gridRow","gridLabel","gridValue","renderRemainingRecords","_stockData$quote2","avgTotalVolume","currency","high","low","peRatio","week52High","week52Low","container","size","create","flex","padding","marginTop","elevation","shadowOffset","shadowOpacity","shadowRadius","fontSize","fontWeight","marginBottom","flexDirection"],"sources":["C:/Users/localadmin/Downloads/AFSD/StockMarketDashboard/components/StockDetailScreen.js"],"sourcesContent":["// StockDetailScreen.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, ScrollView, StyleSheet, ActivityIndicator } from 'react-native';\r\nimport axios from 'axios';\r\nimport { LineChart } from 'react-native-chart-kit';\r\nimport { AreaChart, Grid } from 'react-native-svg-charts';\r\nimport orientation from '../utility/orientation';\r\n\r\n\r\nconst StockDetailScreen = ({ route }) => {\r\n  const { symbol } = route.params;\r\n  const [stockData, setStockData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchStockData();\r\n  }, []);\r\n\r\n  const fetchStockData = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://cloud.iexapis.com/stable/stock/${symbol}/batch?types=quote,news,chart&range=1d&last=10&token=pk_7e655342b747405697cf291d5ccccebc`\r\n      );\r\n\r\n      setStockData(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching stock data:', error);\r\n      // Handle error appropriately\r\n    }\r\n  };\r\n\r\n//   const renderChart = () => {\r\n//     if (stockData && stockData.chart) {\r\n//       const chartData = stockData.chart.map((point) => ({ x: point.label, y: point.close }));\r\n\r\n//       return (\r\n//         <AreaChart\r\n//           style={{ height: 200 }}\r\n//           data={chartData}\r\n//           svg={{ fill: 'rgba(134, 65, 244, 0.8)' }}\r\n//           contentInset={{ top: 20, bottom: 20 }}\r\n//         >\r\n//           <Grid />\r\n//         </AreaChart>\r\n//       );\r\n//     }\r\n//     return null;\r\n//   };  \r\n\r\n  const renderChart = () => {\r\n    if (stockData && stockData.chart) {\r\n      const chartData = stockData.chart.map((point) => point.close);\r\n      const labels = stockData.chart.map((point) => point.label);\r\n\r\n      return (\r\n        <LineChart\r\n          data={{\r\n            labels,\r\n            datasets: [\r\n              {\r\n                data: chartData,\r\n              },\r\n            ],\r\n          }}\r\n          width={300}\r\n          height={200}\r\n          yAxisLabel=\"$\"\r\n          chartConfig={{\r\n            backgroundColor: '#ffffff',\r\n            backgroundGradientFrom: '#ffffff',\r\n            backgroundGradientTo: '#ffffff',\r\n            decimalPlaces: 2,\r\n            color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n            labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n            style: {\r\n              borderRadius: 16,\r\n            },\r\n            propsForDots: {\r\n              r: '1',\r\n              \r\n            },\r\n          }}\r\n          bezier\r\n          style={{\r\n            marginVertical: 8,\r\n            borderRadius: 16,\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderImportantRecords = () => {\r\n    if (stockData && stockData.quote) {\r\n      const { companyName, latestPrice, change, changePercent } = stockData.quote;\r\n\r\n      return (\r\n        <View style={styles.grid}>\r\n          <Text style={styles.gridTitle}>Important Records</Text>\r\n          <View style={styles.gridRow}>\r\n            <Text style={styles.gridLabel}>Company Name:</Text>\r\n            <Text style={styles.gridValue}>{companyName}</Text>\r\n          </View>\r\n          <View style={styles.gridRow}>\r\n            <Text style={styles.gridLabel}>Latest Price:</Text>\r\n            <Text style={styles.gridValue}>${latestPrice}</Text>\r\n          </View>\r\n          <View style={styles.gridRow}>\r\n            <Text style={styles.gridLabel}>Change:</Text>\r\n            <Text style={styles.gridValue}>{change} ({changePercent}%)</Text>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderRemainingRecords = () => {\r\n    if (stockData && stockData.quote) {\r\n        const { avgTotalVolume, currency, high, low, peRatio, week52High, week52Low } = stockData.quote;\r\n  \r\n        return (\r\n          <View style={styles.grid}>\r\n            <Text style={styles.gridTitle}>Other Details</Text>\r\n            <View style={styles.gridRow}>\r\n              <Text style={styles.gridLabel}>Avg Total Volume:</Text>\r\n              <Text style={styles.gridValue}>{avgTotalVolume}</Text>\r\n            </View>\r\n            <View style={styles.gridRow}>\r\n              <Text style={styles.gridLabel}>Currency:</Text>\r\n              <Text style={styles.gridValue}>{currency}</Text>\r\n            </View>\r\n            <View style={styles.gridRow}>\r\n              <Text style={styles.gridLabel}>Day High:</Text>\r\n              <Text style={styles.gridValue}>${high}</Text>\r\n            </View>\r\n            <View style={styles.gridRow}>\r\n              <Text style={styles.gridLabel}>Day Low:</Text>\r\n              <Text style={styles.gridValue}>${low}</Text>\r\n            </View>\r\n            <View style={styles.gridRow}>\r\n              <Text style={styles.gridLabel}>PE Ratio:</Text>\r\n              <Text style={styles.gridValue}>{peRatio}</Text>\r\n            </View>\r\n            <View style={styles.gridRow}>\r\n              <Text style={styles.gridLabel}>52 Week High:</Text>\r\n              <Text style={styles.gridValue}>${week52High}</Text>\r\n            </View>\r\n            <View style={styles.gridRow}>\r\n              <Text style={styles.gridLabel}>52 Week Low:</Text>\r\n              <Text style={styles.gridValue}>${week52Low}</Text>\r\n            </View>\r\n          </View>\r\n        );\r\n      }\r\n      return null;\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {loading ? (\r\n        <ActivityIndicator size=\"large\" color=\"#3498db\" />\r\n      ) : (\r\n      <>\r\n      {renderChart()}\r\n      {renderImportantRecords()}\r\n      {renderRemainingRecords()}\r\n      </>\r\n      )}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  grid: {\r\n    marginTop: 16,\r\n    padding: 16,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    elevation: 3,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 2,\r\n  },\r\n  gridTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n  },\r\n  gridRow: {\r\n    flexDirection: 'row',\r\n    marginBottom: 8,\r\n  },\r\n  gridLabel: {\r\n    flex: 1,\r\n    fontWeight: 'bold',\r\n  },\r\n  gridValue: {\r\n    flex: 2,\r\n  },\r\n});\r\n\r\nexport default StockDetailScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}